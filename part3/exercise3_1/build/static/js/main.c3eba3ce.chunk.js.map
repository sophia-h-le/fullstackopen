{"version":3,"sources":["components/AddANew.js","components/FilterByName.js","services/persons.js","components/Person.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["AddANew","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","FilterByName","newFilter","handleFilterChange","baseUrl","axios","get","then","response","data","newObject","post","window","confirm","name","put","id","person","delete","Person","removePerson","number","onClick","Notification","notiClass","content","className","App","useState","allPersons","setAllPersons","setNewName","setNewNumber","filteredPersons","setFilteredPersons","useEffect","console","log","personService","initialPersons","catch","error","length","addPersonMessage","setAddPersonMessage","setNewFilter","event","filter","target","result","toLowerCase","includes","preventDefault","personObject","some","personToReplace","find","returnedPerson","newAllPersons","map","setTimeout","concat","personToRemove","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3eba3ce.chunk.js","sourcesContent":["import React from 'react'\n\nconst AddANew = (props) => {\n    return (\n        <>\n            <h3>Add A New</h3>\n            <form onSubmit={props.addPerson}>\n                <div>\n                    name: <input \n                        value={props.newName}\n                        onChange={props.handleNameChange}\n                    />\n                </div>\n                <div>\n                    number: <input \n                        value={props.newNumber}\n                        onChange={props.handleNumberChange}\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </>\n    )\n}\n\nexport default AddANew","import React from 'react'\n\nconst FilterByName = (props) => {\n    return (\n        <>\n            <h3>Search by Name: </h3>\n            <input \n                value={props.newFilter} \n                onChange={props.handleFilterChange}\n            />\n        </>\n    )\n}\n\nexport default FilterByName","import axios from 'axios'\nconst baseUrl = '/api/persons'\n// const baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst replace = newObject => {\n    if (window.confirm(`${newObject.name} already exists in phonebook. Proceed to replace?`)) {\n        const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\n        return request.then(response => response.data)\n    }\n    \n    throw \"User changed their mind\"\n}\n\nconst remove = (person) => {\n    if (window.confirm(`Delete '${person.name}'?`)) {\n        return axios.delete(`${baseUrl}/${person.id}`)\n    }\n\n    throw  \"User changed their mind\"\n    // return axios.delete(`${baseUrl}/${person.id}`)\n}\n\nexport default {getAll, create, replace, remove}","import React from 'react'\n\nconst Person = ({person, removePerson }) => {\n    return (\n      <li>\n        {person.name} {person.number}\n        <button onClick={removePerson}>delete</button>  \n      </li>\n    )\n  }\n\nexport default Person","import React from 'react'\n\nconst Notification = ({ notiClass, content }) => {\n    // if ({message} === null) {\n    //     return null\n    // }\n\n    // return (\n    //     <div>\n    //         {message}\n    //     </div>\n    // )\n\n    if (({content} === null) || ({notiClass} === 'noNoti')) {\n        return null\n    }\n\n    return (\n        <div className={notiClass}>\n            {content}\n        </div>\n    )\n}\n\nexport default Notification","import './App.css';\nimport React, { useState, useEffect } from 'react'\n// import Person from './components/Person'\n// import Numbers from './components/Numbers'\nimport AddANew from './components/AddANew'\nimport FilterByName from './components/FilterByName'\n// import axios from 'axios'\nimport personService from './services/persons'\nimport Person from './components/Person'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [ allPersons, setAllPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n\n  const [ filteredPersons, setFilteredPersons ] = useState(allPersons)  \n\n  const hook = () => {\n    console.log('effect')\n    personService\n    .getAll()\n    .then(initialPersons => {\n      setAllPersons(initialPersons)\n      setFilteredPersons(initialPersons)\n    })\n    .catch(error => {\n      console.log('Error: ', error)\n    })\n  }\n  useEffect(hook, [])\n  console.log('render', allPersons.length, 'persons')\n\n  const [ addPersonMessage, setAddPersonMessage ] = useState({ notiClass: 'noNoti', content: '' })\n  // const [ addPersonMessage, setAddPersonMessage ] = useState('')\n  const addPerson = (event) => {\n    event.preventDefault()\n    console.log('button clicked', event.target)\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    // if(persons.some(person => person.name === personObject.name)){\n    //   alert( `${personObject.name} is already added to phonebook.`);\n    // } else {\n    //   setPersons(persons.concat(personObject))\n    // }\n    // setNewName('')\n    // setNewNumber('')\n    if (allPersons.some(person => person.name === personObject.name)) {\n      let personToReplace = allPersons.find(person => person.name === personObject.name)\n      personObject.id = personToReplace.id\n      personService.replace(personObject)\n      .then(returnedPerson => {\n        let newAllPersons = allPersons.map(person => person.id !== returnedPerson.id ? person : returnedPerson)\n        setAllPersons(newAllPersons)\n        setFilteredPersons(newAllPersons)\n        setNewName('')\n        setNewNumber('')\n        setAddPersonMessage({ notiClass: 'success', content: `The number of ${personObject.name} was updated sucessfully` })\n        // setAddPersonMessage(`The number of ${personObject.name} was updated sucessfully`)\n        setTimeout(() => {\n          setAddPersonMessage({ notiClass: 'noNoti', content: ''})\n          // setAddPersonMessage(null)\n        }, 3000)\n      })\n      .catch(error => {\n        let newAllPersons = allPersons.filter(person => person.id !== personObject.id)\n        setAllPersons(newAllPersons)\n        setFilteredPersons(newAllPersons)\n        setNewName('')\n        setNewNumber('')\n        setAddPersonMessage({ notiClass: 'failure', content: `The information of '${personObject.name}' was already removed from the server` })\n        // setAddPersonMessage(`The information of '${personObject.name}' was already removed from the server`)\n        setTimeout(() => {\n          setAddPersonMessage({ notiClass: 'noNoti', content: ''})\n          // setAddPersonMessage(null)\n        }, 3000)\n      })\n      \n    } else {\n      personService\n      .create(personObject)\n      .then(returnedPerson => {\n        let newAllPersons = allPersons.concat(returnedPerson)\n        setAllPersons(newAllPersons)\n        setFilteredPersons(newAllPersons)\n        setNewName('')\n        setNewNumber('')\n        setAddPersonMessage({ notiClass: 'success', content: `The number of ${personObject.name} was added to the phonebook` })\n        // setAddPersonMessage(`The number of ${personObject.name} was added to the phonebook`)\n        setTimeout(() => {\n          setAddPersonMessage({ notiClass: 'noNoti', content: ''})\n          // setAddPersonMessage(null)\n        }, 3000)\n    })\n    }\n    \n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const [ newFilter, setNewFilter ] = useState('')\n  const handleFilterChange = (event) => {\n    let filter = event.target.value\n    setNewFilter(filter)\n    // console.log(filter)s\n\n    let result = allPersons.filter(\n      person => person.name.toLowerCase().includes(filter.toLowerCase()) > 0)\n\n    setFilteredPersons(result)\n  }\n\n  const removePersonAt = (personToRemove) => {\n    console.log(`remove ${personToRemove.name}`)\n    // const id = personToRemove.id\n    // const person = allPersons.find(p => p.id === d)\n\n    personService\n    .remove(personToRemove)\n    .then(\n      function() {\n        let newAllPersons = allPersons.filter(person => person !== personToRemove)\n        setAllPersons(newAllPersons)\n        setFilteredPersons(newAllPersons)\n        // console.log(newAllPersons)\n        // setAllPersons(allPersons.filter(person => person !== personToRemove))\n      }\n      \n    )\n    // console.log(allPersons)\n    // setFilteredPersons(allPersons)\n  }\n\n  \n  \n  return (\n    <div>\n      <h2>Phonebook</h2>  \n      <Notification notiClass={addPersonMessage.notiClass} content={addPersonMessage.content}/>\n      <FilterByName \n        newFilter={newFilter}\n        handleFilterChange={handleFilterChange}\n      />\n      <AddANew \n        addPerson={addPerson} \n        newName={newName} \n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <ul>\n        {filteredPersons.map(person => \n          <Person\n            key={person.id}\n            person={person}\n            removePerson={() => removePersonAt(person)}\n          />\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}